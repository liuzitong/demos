作者：WB
版本：0.1
日期：2019/04/16
主题：关于C/C++ 中命名方式及规则的约定

===============================================================================

【 变量 】

0. 约定

    基本类型 ( char, short, long, int, void*, float, double ... ) 等，
以及由 class 定义的对象，由 struct 定义的结构钵

1. 规则

   a) 类或结构体中的成员
      m + _ + 小写/缩写单词 + _ + 小写/缩写单词 + ...
      示例；
      m_width       表示宽度
      m_video_data  表示视频数据

   b) 公用域中的变量 ( 全局，命名空间公用域 )
      g + _ + 小写单词 + _ + 小写/缩写单词 + ...
      示例：
      g_locker      表示一个全局性的锁变量
      g_ref_cntr    表示一个全局性的引用计数器

   c) 临时变量
      在函数中或者函数参数中的变量
      小写单词 + _ + 小写单词 + _ + 小写单词 ...
      示例：
      money_counter

   d) 循环变量
      在 for 循环中的计数控制变量，作用域仅为 for() 函数体。
      使用简单字母表示。
      示例：
      for ( int x = 0; x < 6; x ++ ) { ... }

   e) 缩写单词
      缩写单词由大写首字母组成，通常由众所周所的单词组成。
      示例：
      UID --- Unique ID


【 函数 】
   
0. 约定

    程序中的全局函数，静态函数，类成员函数

1. 规则

    a) 全局函数
    g + 首字母大写单词 + 首字母大写单词 ...
    示例：
    gFatalInfo( const char * ); 

    b) 静态函数/类成员函数
    小写单词 + 首字母大写单词 + 首字母大写单词 + ...
    示例：
    setMoney( int );

    成员函数规则：
        * 取数据
          用于直接返回数据的方式，通常看作属性，此直接以数据名称命名。
          示例： int  width( );

        * 通过参表中的变量返回，并不直接从函数执行结果返回
          以 read/get 作为前缀
          示例： bool  readWidtdh( int &w );

        * 设置数据/执行行为方法
          以 动词 + 名词，作为命名方式
          示例：
          void  setWidth( int );
          bool  writeData( const char * );
          bool  update( );


【 信号 】

0. 约定
   信号指QT5 中的 Q_SIGNAL/signals 声明的函数 
      
1. 规则

   a) 表示某个函数发生了变化
   小写单词 + Changed
   示例：
   Q_SIGNAL void  moneyChanged( );

   b) 表示发出一个请求，需要接收者作一些执行方法的
   req + 大写首字母单词 + 大写首字母单词 + ...
   示例：
   Q_SIGNAL void  reqUpdateStatus( );

   c) 表示某个动作已执行的通知
   小写单词 + 动作过去式单词（大写首字母）
   示例：
   Q_SIGNAL void  documentUpdated( );

【 槽 】

0. 约定
   槽指QT5 中的 Q_SLOT 声明的函数

1. 规则
   
   a) 接收本类或者父类中的信号
   on + 信号全称
   示例:
   Q_SLOT void  onMoneyChanged( );

   b) 接收其他类中的信号
   类成员中可能含有多种类，具有相同的信号名，需要一个前缀进行区分。
   前缀以类成员名（不带 m_ 前缀为准）
   示例：
   有如下成员：
   MyClass    m_clsA;
   YourClass  m_clsB;
   它们都有信号 stateChanged( ), 所以以如下方式进行命名槽
   Q_SLOT void clsA_onStateChanged( );
   Q_SLOT void clsB_onStateChanged( );
 

【 宏 】

0. 约定
   C/C++ 中使用 #define 定义的有名替换用文本

1. 规则

   a) 不带参数的宏名
   大写单词 + _ + 大写单词 + _ + 大写单词
   示例：
   #define  NAME_TEXT  "name string"

   b) 带参数的宏名
   与不带参数的宏名一致

【 常量 】
0. 约定
   C/C++ 中使用 const 定义的不可更改的存储类型

1. 规则 
   常量采取与 变量 一致的命名方法

【 结构体/类 】
0. 约定
   C/C++ 中使用 class/struc 声明的类型名

1. 规则
   大写首字母单词 + 大定首字母单词
   示例：
   class UserInfo


【 联合体 】
0. 约定
   C/C++ 中使用 union 定义的相同存储空间的复合对象

1. 规则
   u + 大写首字母单词 + 大定首字母单词
   示例：
   union uFloatInt { float m_flt; int m_int; };

【 枚举 】
0. 约定
   C/C++ 中使用 enum 定义的只读常量

1. 规则
   a) 枚举的名称
   大写首字母单词 + 大写首字母单词 + ...
   示例：
   enum Week

   b) 枚举的成员
   枚举名称 + _ + 大写首字母单词 + _ + 大写首字母单词 ...
   示例：
   enum Week { Week_Monday, Week_Tuesday } 

